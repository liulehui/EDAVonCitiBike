knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggmap)
library(leaflet)
library(leaflet.extras)
library(lubridate)
library(dygraphs)
library(xts)
library(zoo)
df <- read.csv('./201806-citibike-tripdata.csv')
df <- df %>% mutate(minute=tripduration/60)
overalltripduration <-  ggplot(data=df,mapping=aes(x=1,y=minute)) + geom_boxplot(fill='Orange')+ggtitle('Distribution of time duration')
overalltripduration + theme(plot.title = element_text(lineheight=.8, face="bold"))
df_within120 <- subset(df,minute<120 & minute>0)
overalltripduration2 <-  ggplot(data=df_within120,mapping=aes(x=1,y=minute)) + geom_boxplot(fill='Orange')+ggtitle('distribution of time duration')
overalltripduration2 + theme(plot.title = element_text(lineheight=.8, face="bold"))
overalltripduration3 <- ggplot(data=df_within120,mapping=aes(minute)) + geom_histogram(fill='Orange',color='black')+ggtitle('distribution of time duration')
overalltripduration3 + theme(plot.title = element_text(lineheight=.8, face="bold"))
df <- subset(df,minute<120 & minute>0)
overalltripduration2 <-  ggplot(data=df,mapping=aes(x=1,y=minute)) + geom_boxplot(fill='Orange')+ggtitle('distribution of time duration')
overalltripduration2 + theme(plot.title = element_text(lineheight=.8, face="bold"))
overalltripduration3 <- ggplot(data=df,mapping=aes(minute)) + geom_histogram(fill='Orange',color='black')+ggtitle('distribution of time duration')
overalltripduration3 + theme(plot.title = element_text(lineheight=.8, face="bold"))
View(df_within120)
library(ggplot2)
library(dplyr)
library(ggmap)
library(leaflet)
library(leaflet.extras)
df <- read.csv('./201806-citibike-tripdata.csv')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggmap)
library(leaflet)
library(leaflet.extras)
df <- read.csv('./201806-citibike-tripdata.csv')
df <- df %>% mutate(minute=tripduration/60)
overalltripduration <-  ggplot(data=df,mapping=aes(x=1,y=minute)) + geom_boxplot(fill='Orange')+ggtitle('Distribution of time duration')
overalltripduration + theme(plot.title = element_text(lineheight=.8, face="bold"))
df <- subset(df,minute<120 & minute>0)
overalltripduration2 <-  ggplot(data=df,mapping=aes(x=1,y=minute)) + geom_boxplot(fill='Orange')+ggtitle('distribution of time duration')
overalltripduration2 + theme(plot.title = element_text(lineheight=.8, face="bold"))
overalltripduration3 <- ggplot(data=df,mapping=aes(minute)) + geom_histogram(fill='Orange',color='black')+ggtitle('distribution of time duration')
overalltripduration3 + theme(plot.title = element_text(lineheight=.8, face="bold"))
summary = df %>%
group_by(start.station.id) %>%
summarise(lat=as.numeric(start.station.latitude[1]),
long=as.numeric(start.station.longitude[1]),
name=start.station.name[1],
n.trips=n())
leaflet(summary) %>%setView(-74.00, 40.71, zoom = 12) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(lng = ~long, lat = ~lat)
# There are two points outside New York state. Apprently those are outliers, so we remove them.
id = which(df$start.station.latitude > 45)
df = df[-id,]
df$factor_year = as.factor(df$birth.year)
summary_18_6 = df %>% group_by(factor_year) %>%
summarise(Freq = n()) %>%
arrange(desc(Freq)) #1969
summary_18_6 = mutate(summary_18_6, time = rep("201806", nrow(summary_18_6)))
ggplot(summary_18_6, aes(x = factor_year, y = Freq)) + geom_point() +
coord_flip() + xlab("user's birth year") +
ggtitle("Frequency of Citi Bike users' birth year in 2018/6")
data_16_6 = read.csv("./data/201606-citibike-tripdata.csv")
data_17_6 = read.csv("./data/201706-citibike-tripdata.csv")
data_17_12 = read.csv("./data/201712-citibike-tripdata.csv")
data_18_1 = read.csv("./data/201801-citibike-tripdata.csv")
data_18_5 = read.csv("./data/201805-citibike-tripdata.csv")
data_18_6 = df
data_18_5 = data_18_5 %>% mutate(minute=tripduration/60)%>%
filter(minute<120 & minute>0)
data_17_6 = data_17_6 %>% mutate(minute=tripduration/60)%>%
filter(minute<120 & minute>0)
data_16_6 = data_16_6 %>% mutate(minute=tripduration/60)%>%
filter(minute<120 & minute>0)
data_17_12 = data_17_12 %>% mutate(minute=tripduration/60)%>%
filter(minute<120 & minute>0)
data_18_1 = data_18_1 %>% mutate(minute=tripduration/60)%>%
filter(minute<120 & minute>0)
data_18_6$factor_year = as.factor(data_18_6$birth.year)
summary_18_6 = data_18_6 %>% group_by(factor_year) %>%
summarise(Freq = n()) %>%
arrange(desc(Freq)) #1969
summary_18_6 = mutate(summary_18_6, time = rep("201806", nrow(summary_18_6)))
data_17_6$factor_year = as.factor(data_17_6$birth.year)
summary_17_6 = data_17_6 %>% group_by(factor_year) %>%
summarise(Freq = n()) %>%
arrange(desc(Freq)) #NULL
summary_17_6 = mutate(summary_17_6, time = rep("201706", nrow(summary_17_6)))
data_16_6$factor_year = as.factor(data_16_6$birth.year)
summary_16_6 = data_16_6 %>% group_by(factor_year) %>%
summarise(Freq = n()) %>%
arrange(desc(Freq)) #NULL
summary_16_6 = mutate(summary_16_6, time = rep("201606", nrow(summary_16_6)))
df_2month = full_join(summary_18_6, summary_17_6, by = "factor_year")
df_3month = full_join(df_2month, summary_16_6, by = "factor_year")
t1 = data.frame(factor_year = df_3month$factor_year,Freq = df_3month$Freq.x, time = df_3month$time.x)
t2 = data.frame(factor_year = df_3month$factor_year,Freq = df_3month$Freq.y, time = df_3month$time.y)
t3 = data.frame(factor_year = df_3month$factor_year,Freq = df_3month$Freq, time = df_3month$time)
tf = rbind(t1,t2,t3)
ggplot(tf, aes(x = factor_year, y = Freq, color = as.factor(time))) + geom_point() +
coord_flip() + xlab("user's birth year") +
ggtitle("Frequency of Citi Bike users' birth year in different months")+
labs(fill="Time")
data_17_12$factor_year = as.factor(data_17_12$birth.year)
summary_17_12 = data_17_12 %>% group_by(factor_year) %>%
summarise(Freq = n()) %>%
arrange(desc(Freq)) #NULL
summary_17_12 = mutate(summary_17_12, time = rep("201606", nrow(summary_17_12)))
data_18_1$factor_year = as.factor(data_18_1$birth.year)
summary_18_1 = data_18_1 %>% group_by(factor_year) %>%
summarise(Freq = n()) %>%
arrange(desc(Freq)) #1969
summary_18_1 = mutate(summary_18_1, time = rep("201606", nrow(summary_18_1)))
set.seed(321)
index = sample(nrow(data_18_6), round(nrow(data_18_6)*0.001))
sample = data_18_6[index,]
g = ggplot(sample, aes(birth.year,minute))
g + geom_point(alpha = 0.5) + ylab("trip duration (in min)") +
xlab("users' birth year") + ggtitle("Scatterplot of uses' birth year and trip duration (in sec) in Jun 2018")
## get station info
station.info <- data_18_6 %>%
group_by(start.station.id) %>%
summarise(lat=as.numeric(start.station.latitude[1]),
long=as.numeric(start.station.longitude[1]),
name=start.station.name[1],
n.trips=n())
leaflet(station.info) %>%setView(-74.00, 40.71, zoom = 12) %>%
addProviderTiles("CartoDB.Positron") %>%
addHeatmap(lng=~long, lat=~lat, intensity = ~n.trips, radius = 7, gradient = "YlGnBu")
pal = colorNumeric(
palette="YlOrRd",
domain = station.info$n.trips
)
leaflet(station.info) %>%setView(-74.00, 40.71, zoom = 12) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(lng = ~long, lat = ~lat, color =~pal(n.trips)) %>%
addLegend("bottomright", pal = pal, value = ~n.trips, title = "Num of Trips (2018.6)")
## get station info
station.info <- data_18_6 %>%
group_by(start.station.id) %>%
summarise(lat=as.numeric(start.station.latitude[1]),
long=as.numeric(start.station.longitude[1]),
name=start.station.name[1],
n.trips=n())
leaflet(station.info) %>%setView(-74.00, 40.71, zoom = 12) %>%
addProviderTiles("CartoDB.Positron") %>%
addHeatmap(lng=~long, lat=~lat, intensity = ~n.trips, radius = 7, gradient = "YlGnBu")
pal = colorNumeric(
palette="YlOrRd",
domain = station.info$n.trips
)
leaflet(station.info) %>%setView(-74.00, 40.71, zoom = 12) %>%
leaflet::addProviderTiles("CartoDB.Positron") %>%
leaflet::addCircles(lng = ~long, lat = ~lat, color =~pal(n.trips)) %>%
leaflet::addLegend("bottomright", pal = pal, value = ~n.trips, title = "Num of Trips (2018.6)")
NYCweather<-read.csv("./data/NYCweather.csv")
df$Date <- as.Date(df$starttime)
NYCweather$Date<-as.Date(NYCweather$Date)
df_weather <- inner_join(df,NYCweather,by="Date")
df_weather$Severe <- as.factor(df_weather$Severe)
hist(df_weather$Date, breaks="days", freq=TRUE)
ggplot(df_weather, aes(x=Date))+
geom_histogram(colour="white", fill="steelblue")+
ggtitle("Number of trips by day")
ggplot(df_weather, aes(x=Severe, y=))+
geom_bar(colour="white", fill="steelblue")+
ggtitle("Number of trips per day for severe and unsevere weather condition")
ggplot(data = df_weather,
aes(x = Windspeed, y = minute)) +
scale_x_continuous("Windspeed") +
scale_y_continuous("Average trip duration in minutes") +
ggtitle("Trip duration vs. Windspeed") +
stat_summary(fun.y="mean", geom = "line", colour="steelblue", size=1)
ggplot(data = df_weather,
aes(x = Temperature, y = minute)) +
scale_x_continuous("Temperature") +
scale_y_continuous("Average trip duration in minutes") +
ggtitle("Trip duration vs. Temperature") +
stat_summary(fun.y="mean", geom="line", colour="steelblue", size=1)
ggplot(data = df_weather,
aes(x = Precipitation, y = minute)) +
scale_x_continuous("Precipitation") +
scale_y_continuous("Average trip duration in minutes") +
ggtitle("Trip duration vs. Precipitation") +
stat_summary(fun.y="mean", geom = "line", colour="steelblue", size=1)
ggplot(data = df_weather,
aes(x=factor(Severe), y=minute))+
xlab("Severity of weather")+ylab("Average trip length")+
stat_summary(fun.y="mean", geom="bar")
df_by_temp <- df_weather %>% group_by(Temperature) %>% summarise(n_distinct(starttime))
ggplot(data = df_by_temp, aes(x=as.numeric(Temperature), y=`n_distinct(starttime)`))+
stat_summary(geom="bar", fill="steelblue")+
xlab("Temperature")+
ylab("Average trips per day")+
ggtitle("Average daily trips in different temperatures")
df_by_windspeed <- df_weather %>% group_by(Windspeed) %>% summarise(n_distinct(starttime))
ggplot(data = df_by_windspeed, aes(x=as.numeric(Windspeed), y=`n_distinct(starttime)`))+
stat_summary(geom="bar", fill="steelblue")+
xlab("Windspeed")+
ylab("Average trips per day")+
ggtitle("Average daily trips in different windspeeds")
df_by_precip <- df_weather %>% group_by(Precipitation) %>% summarise(n_distinct(starttime))
ggplot(data = df_by_precip, aes(x=as.numeric(Precipitation), y=`n_distinct(starttime)`))+
stat_summary(geom="bar", fill="steelblue")+
xlab("Precipitation")+
ylab("Average trips per day")+
ggtitle("Average daily trips in different precipitations")
df_timeseries <- read.csv('./data/data_2017_2018.csv')
a <- mdy_hms(df_timeseries$starttime)
b <- as.Date(df_timeseries$starttime)
b[is.na(b)] <- a[!is.na(a)]
df_timeseries$starttime <- b
df_timeseries <- df_timeseries %>% mutate(time = format(as.Date(starttime), "%Y-%m"))
df_timeseries <- df_timeseries[,c("time","usertype")]
df_timeseries <- read.csv('./data/data_2017_2018.csv')
a <- lubridate::mdy_hms(df_timeseries$starttime)
b <- as.Date(df_timeseries$starttime)
b[is.na(b)] <- a[!is.na(a)]
df_timeseries$starttime <- b
df_timeseries <- df_timeseries %>% mutate(time = format(as.Date(starttime), "%Y-%m"))
df_timeseries <- df_timeseries[,c("time","usertype")]
df_subscriber <- df_timeseries %>% subset(usertype == 'Subscriber')
df_customer <- df_timeseries %>% subset(usertype == 'Customer')
df_subscriber <- df_subscriber %>% group_by(time) %>% summarise(Number = n())
df_customer <- df_customer %>% group_by(time) %>% summarise(Number = n())
ts_subscriber <- xts(df_subscriber$Number,as.Date(as.yearmon(df_subscriber$time)))
ts_customer <- xts(df_customer$Number,as.Date(as.yearmon(df_customer$time)))
ts <- cbind(ts_subscriber,ts_customer)
dygraph(ts,main = 'Impact of season',ylab = "Frequency") %>% dySeries('..1',label = 'subscriber ') %>% dySeries('..2',label = 'customer') %>% dyLegend(show = "always", hideOnMouseOut = FALSE,width=400) %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set2"))
df_timeseries <- read.csv('./data/data_2017_2018.csv')
a <- lubridate::mdy_hms(df_timeseries$starttime)
b <- as.Date(df_timeseries$starttime)
b[is.na(b)] <- a[!is.na(a)]
df_timeseries$starttime <- b
df_timeseries <- df_timeseries %>% mutate(time = format(as.Date(starttime), "%Y-%m"))
df_timeseries <- df_timeseries[,c("time","usertype")]
df_subscriber <- df_timeseries %>% subset(usertype == 'Subscriber')
df_customer <- df_timeseries %>% subset(usertype == 'Customer')
df_subscriber <- df_subscriber %>% group_by(time) %>% summarise(Number = n())
df_customer <- df_customer %>% group_by(time) %>% summarise(Number = n())
ts_subscriber <- xts(df_subscriber$Number,as.Date(as.yearmon(df_subscriber$time)))
ts_customer <- xts(df_customer$Number,as.Date(as.yearmon(df_customer$time)))
ts <- cbind(ts_subscriber,ts_customer)
dygraph(ts,main = 'Impact of season',ylab = "Frequency") %>% dySeries('..1',label = 'subscriber ') %>% dySeries('..2',label = 'customer') %>% dyLegend(show = "always", hideOnMouseOut = FALSE,width=400) %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set2"))
library(lubridate)
df_timeslot <- mutate(df,hour = hour(as.POSIXct(starttime)))
df_timeslot <- mutate(df_timeslot,wday = wday(as.POSIXct(starttime)))
df_timeslot <- df_timeslot[,c("hour","wday","minute","start.station.name","usertype")]
timeslot <- ggplot(data=df_timeslot,mapping=aes(as.factor(hour))) +geom_bar(color='Orange')+ggtitle('Time slot in trip data group by usertype')
timeslot + facet_wrap(~usertype)
timeslot <- ggplot(data=df_timeslot,mapping=aes(as.factor(hour))) +geom_bar(color='Orange')+ggtitle('Time slot in trip data group by weekdays')
timeslot + facet_wrap(~as.factor(wday))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(forcats)
df <- read.csv("./final/data_201806.csv")
df2 <- df %>% group_by('start_id')
library(dplyr)
library(ggplot2)
library(forcats)
df <- read.csv("./final/data_201806.csv")
df2 <- df %>% group_by('start_id')
df2
library(dplyr)
library(ggplot2)
library(forcats)
df <- read.csv("./final/data_201806.csv")
df2 <- df[,c('start.station.id','start.station.name','start.station.latitude','start.station.longitude')]%>% group_by('start.station.id')
df2
library(dplyr)
library(ggplot2)
library(forcats)
df <- read.csv("./final/data_201806.csv")
df2 <- df[,c('start.station.id','start.station.name','start.station.latitude','start.station.longitude')]%>% group_by(start.station.id)
df2
library(dplyr)
library(ggplot2)
library(forcats)
df <- read.csv("./final/data_201806.csv")
df2 <- df[,c('start.station.id','start.station.name','start.station.latitude','start.station.longitude')]%>% group_by(start.station.id) %>% summarise(Freq=n()) %>% arrange(Freq)
df2
library(dplyr)
library(ggplot2)
library(forcats)
df <- read.csv("./final/data_201806.csv")
df2 <- df[,c('start.station.id','start.station.name','start.station.latitude','start.station.longitude')]%>% group_by(start.station.id) %>% summarise(Freq=n()) %>% arrange(desc(Freq))
df2
library(dplyr)
library(ggplot2)
library(forcats)
df <- read.csv("./final/data_201806.csv")
df2 <- df[,c('start.station.id','start.station.name','start.station.latitude','start.station.longitude')]%>% group_by(start.station.id,start.station.latitude,start.station.longitude) %>% summarise(Freq=n()) %>% arrange(desc(Freq))
df2
